[["index.html", "GOVT 8002 Shared Working Book Spring 2024 1 Introduction 1.1 Purpose of This Site 1.2 Loading Data", " GOVT 8002 Shared Working Book Spring 2024 Benjamin Reese | bfr11@georgetown.edu 1 Introduction 1.1 Purpose of This Site The goal of this site is to have a place where you can look for examples of code. Think of this site as a log of all of the topics we cover in class and in lab sessions. I will make updates throughout the semester as we cover more advanced material. I hope this proves to be a helpful and beneficial resource and offer an easier to access format than the files posted to Canvas. If you are interested, I am happy to add you to the GitHub and you can make some direct edits to add your code! Let me know if any of this code doesn’t run correctly or if you have any questions or issues! 1.2 Loading Data The easiest way to load data into R and ensure you have the correct file path is to create a folder on your computer for each assignment and place the datasets directly into that folder. Create a folder on your computer for each new analysis Download your Data and move the file to your newly created folder Then open RStudio Click the project button in the top right corner Click new project Click existing directory Click browse and find the folder that you created Click create project Once your new project opens, click the blank page with a green plus sign icon in the top left corner under the file option Click R script to open a new script You should also be able to see your data file in the bottom right window of RStudio, click the file and follow the options depending on the file type Once your data is imported into R, the code that R automatically ran will be in the console window on the bottom left, copy and paste it to your fresh R script For example, in Lab 1, my code looked like: read_excel(\"USstates.xlsx\") Run this copy and pasted line of code whenever you open the R Project and you will never have to worry about complicated file pathing commands I recommend using the assignment operator &lt;- to give your dataset a short and simple name like df, dta, or, if you are working with multiple datasets, name each something short and descriptive "],["lab-i-tidyverse.html", "2 Lab I: Tidyverse 2.1 Join the data sets. 2.2 Create and add the following four variables to your dataframe: density (based on sqMiles and pop2019), deaths per capita (based on new_death), cases per capita (based on new_case) and vaccinated percent (based on Series_Complete_12PlusPop_Pct). 2.3 Estimate three regression models with deaths per capita on your selected day as the dependent variable. 2.4 Assess specific vaccines", " 2 Lab I: Tidyverse 2.0.1 Preparation ## Packages library(tidyverse) library(dplyr) library(readxl) # Package to read Excel data library(stargazer) 2.1 Join the data sets. Join the cases and vaccination data by date and state. Case data: United_States_COVID-19_Cases_and_Deaths_by_State_over_Time.csv Vaccination data: COVID-19_Vaccinations_in_the_United_States_Jurisdiction.csv Other state variables: USstates.xlsx Add the USstates.xlsx data and limit your dataframe to the states listed in USstates.xlsx. How do you know if your merge was successful? ANSWER: Looking at the dataframe is useful. Look at individual states - do the variables that are supposed to be the same (e.g. population) the same over the time period? Do the case numbers look reasonable? ## Load data # https://data.cdc.gov/Case-Surveillance/United-States-COVID-19-Cases-and-Deaths-by-State-o/9mfq-cb36 cases &lt;- read.csv(&quot;Data/United_States_COVID-19_Cases_and_Deaths_by_State_over_Time.csv&quot;) # Vax data # &quot;COVID-19 Vaccinations in the United States,Jurisdiction&quot; # https://data.cdc.gov/Vaccinations/COVID-19-Vaccinations-in-the-United-States-Jurisdi/unsk-b7fc vax &lt;- read.csv(&quot;Data/COVID-19_Vaccinations_in_the_United_States_Jurisdiction.csv&quot;) df &lt;- cases %&gt;% left_join(vax, by = c(&quot;submission_date&quot; = &quot;Date&quot;, &quot;state&quot; = &quot;Location&quot;)) # Add state variables stFacts &lt;- read_excel(&quot;Data/USstates.xlsx&quot;, sheet = &quot;data&quot;) %&gt;% rename(trump2020Pct = trump2020_percent) # %&gt;% mutate(trump2020Pct = trump2020Pct) df &lt;- df %&gt;% filter(state %in% stFacts$stateAbbr == 1) %&gt;% left_join(stFacts, by = c(&quot;state&quot; = &quot;stateAbbr&quot;)) 2.2 Create and add the following four variables to your dataframe: density (based on sqMiles and pop2019), deaths per capita (based on new_death), cases per capita (based on new_case) and vaccinated percent (based on Series_Complete_12PlusPop_Pct). For a specific day (based on submission_date), show the top five states ranked by deaths per capita and calculate the average vaccinated per capita and the mean, minimum and maximum deaths per capita. df &lt;- df %&gt;% mutate(&quot;deathsPC&quot; = 100000*new_death/pop2019, &quot;casesPC&quot; = 100000*new_case/pop2019, &quot;vaxedPct&quot; = Series_Complete_12PlusPop_Pct/100, &quot;density&quot; = pop2019/(1000000*sqMiles)) # Pick a day DATE &lt;- &quot;10/18/2021&quot; df_day &lt;- df %&gt;% filter(submission_date == DATE) %&gt;% arrange(desc(deathsPC)) # Look at data (check for negative deaths etc) df_day %&gt;% dplyr::select(submission_date, state, new_case, new_death, deathsPC, casesPC) %&gt;% slice(1:5) ## submission_date state new_case new_death deathsPC casesPC ## 1 10/18/2021 ID 1290 42 2.350222 72.18540 ## 2 10/18/2021 AK 691 16 2.187152 94.45762 ## 3 10/18/2021 MT 426 19 1.777731 39.85860 ## 4 10/18/2021 AL 961 84 1.713172 19.59951 ## 5 10/18/2021 WV 689 26 1.450774 38.44551 df_day %&gt;% summarize(meanVaxedPct = mean(vaxedPct), meanDeath = mean(deathsPC), minDeath = min(deathsPC), maxDeath = max(deathsPC)) ## meanVaxedPct meanDeath minDeath maxDeath ## 1 0.6388235 0.4587514 0 2.350222 2.3 Estimate three regression models with deaths per capita on your selected day as the dependent variable. Your first model will have only Trump 2020 percent as an independent variable. Your second model will add vaccinated percent as an independent variable. Your third model will add density. Before you estimate the models, write down your expectations about what will happen in these models. ANSWER: See table below. The key idea here is omitted variable bias. If we only have Trump percent, then vaccination rates are omitted. For October 1st, 2021, the Trump variable becomes insignificant when vaccination rates are included. One complication, for which I suspect there is no clear answer, is whether vaccination rates are a post-treatment variable. What do you think? ## Models ols.1 &lt;- lm(deathsPC ~ trump2020Pct, data = df_day) summary(ols.1) ## ## Call: ## lm(formula = deathsPC ~ trump2020Pct, data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.86967 -0.29350 -0.10922 0.09968 1.65723 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.5191 0.3150 -1.648 0.10578 ## trump2020Pct 1.9868 0.6222 3.193 0.00246 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5275 on 49 degrees of freedom ## Multiple R-squared: 0.1722, Adjusted R-squared: 0.1554 ## F-statistic: 10.2 on 1 and 49 DF, p-value: 0.00246 ols.2 &lt;- lm(deathsPC ~ trump2020Pct + vaxedPct, data = df_day) summary(ols.2) ## ## Call: ## lm(formula = deathsPC ~ trump2020Pct + vaxedPct, data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.8504 -0.3075 -0.0117 0.1776 1.6685 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.0291 0.7263 2.794 0.007463 ** ## trump2020Pct 0.2193 0.7212 0.304 0.762361 ## vaxedPct -2.6272 0.6913 -3.800 0.000408 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4673 on 48 degrees of freedom ## Multiple R-squared: 0.3637, Adjusted R-squared: 0.3372 ## F-statistic: 13.72 on 2 and 48 DF, p-value: 1.941e-05 ols.3 &lt;- lm(deathsPC ~ trump2020Pct + vaxedPct + density, data = df_day) summary(ols.3) ## ## Call: ## lm(formula = deathsPC ~ trump2020Pct + vaxedPct + density, data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.83946 -0.30634 -0.01337 0.16991 1.66741 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.1095 0.8901 2.370 0.021938 * ## trump2020Pct 0.1205 0.9562 0.126 0.900283 ## vaxedPct -2.6711 0.7506 -3.559 0.000865 *** ## density -8.7715 54.9523 -0.160 0.873864 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4721 on 47 degrees of freedom ## Multiple R-squared: 0.364, Adjusted R-squared: 0.3234 ## F-statistic: 8.968 on 3 and 47 DF, p-value: 8.334e-05 2.4 Assess specific vaccines Create and add vaccinated percent by state for each of the Pfizer, Modern and Janssen (which is Johnson and Johnson) vaccines. Use pop2019 for population Use Series_Complete_Moderna_18Plus, Series_Complete_Janssen_18Plus and Series_Complete_Pfizer_18Plus for the vaccination totals. Estimate a model in which deaths per capita is a function of all three vaccination rates. Explain what the results mean, especially in light of the results above for overall vaccination results. Explain how one would compare the efficacy of the individual vaccines (e.g., whether the Moderna vaccine works better than the Johnson and Johnson vaccine). ANSWER: The major issue here is multicollinearity. For October 1, 2021, the overall vaccination rate was statistically significant (see models 1 - 3 in the table) yet each of the different vaccines was insignificant (see model 4). The vaccines are multicollinear (which can be assessed with an auxilliary regression) so the loss of power is not terribly surprising. An F-test whether all the specific vaccine variables equal zero is reported for model 4 and, broadly consistent with the results in models 1 -3 we can say that we can reject the null that all individual vaccines have zero effect. To assess whether Moderna is better than Johnson and Johnson we would do an F-test where our restricted equation adds those two vaccines. If doing so causes a substantial reduction in fit we would reject the null that the effects of those two vaccines are equal. (And we would want to take such results with a grain of salt given endogeneity in which states have which vaccines.) df &lt;- df %&gt;% mutate(&quot;vaxedPctModerna&quot; = Series_Complete_Moderna_18Plus/(100*pop2019), &quot;vaxedPctJans&quot; = Series_Complete_Janssen_18Plus/(100*pop2019), &quot;vaxedPctPfizer&quot; = Series_Complete_Pfizer_18Plus/(100*pop2019)) df_day &lt;- df %&gt;% filter(submission_date == DATE) ols.4 &lt;- lm(deathsPC ~ vaxedPctJans + vaxedPctModerna + vaxedPctPfizer, data = df_day) summary(ols.4) ## ## Call: ## lm(formula = deathsPC ~ vaxedPctJans + vaxedPctModerna + vaxedPctPfizer, ## data = df_day) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.02398 -0.33730 -0.03042 0.16891 1.55666 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.3934 0.6526 3.667 0.000623 *** ## vaxedPctJans 469.8399 1077.0087 0.436 0.664656 ## vaxedPctModerna -156.1936 541.3745 -0.289 0.774223 ## vaxedPctPfizer -676.4798 305.1014 -2.217 0.031480 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5201 on 47 degrees of freedom ## Multiple R-squared: 0.2282, Adjusted R-squared: 0.1789 ## F-statistic: 4.632 on 3 and 47 DF, p-value: 0.006426 stargazer(ols.1, ols.2, ols.3, ols.4, type = &quot;html&quot;, # FOR PDF - the &quot;asis&quot; above makes it work keep.stat = c(&quot;n&quot;,&quot;ser&quot;, &quot;rsq&quot;, &quot;f&quot;), report = &quot;vcst&quot;, column.labels = c(&quot;Model 1&quot;, &quot;Model 2&quot;, &quot;Model 3&quot;, &quot;Model 4&quot;), digits = 3, dep.var.caption = &quot;&quot;, dep.var.labels.include = FALSE) Model 1 Model 2 Model 3 Model 4 (1) (2) (3) (4) trump2020Pct 1.987 0.219 0.120 (0.622) (0.721) (0.956) t = 3.193 t = 0.304 t = 0.126 vaxedPct -2.627 -2.671 (0.691) (0.751) t = -3.800 t = -3.559 density -8.772 (54.952) t = -0.160 vaxedPctJans 469.840 (1,077.009) t = 0.436 vaxedPctModerna -156.194 (541.375) t = -0.289 vaxedPctPfizer -676.480 (305.101) t = -2.217 Constant -0.519 2.029 2.110 2.393 (0.315) (0.726) (0.890) (0.653) t = -1.648 t = 2.794 t = 2.370 t = 3.667 Observations 51 51 51 51 R2 0.172 0.364 0.364 0.228 Residual Std. Error 0.528 (df = 49) 0.467 (df = 48) 0.472 (df = 47) 0.520 (df = 47) F Statistic 10.196*** (df = 1; 49) 13.717*** (df = 2; 48) 8.968*** (df = 3; 47) 4.632*** (df = 3; 47) Note: p&lt;0.1; p&lt;0.05; p&lt;0.01 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
